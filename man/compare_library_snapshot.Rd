% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project-library.R
\name{compare_library_snapshot}
\alias{compare_library_snapshot}
\title{Compare project library to snapshot (helper function)}
\usage{
compare_library_snapshot(proj_libpath = .libPaths()[1])
}
\arguments{
\item{proj_libpath}{character: The location of the project library 
(note: changing this value is not recommended)}
}
\value{
The function returns a list with 1 or 2 elements:
\enumerate{
\item [outcome name]: A message about the comparison outcome
\item 'compare_df': A data frame comparing snapshot & library packages (if applicable)
}
}
\description{
The result of the comparison informs the recommendation for actions in
syncing the package library and it's snapshot. There are 5 possible outcomes
to the comparison:
\itemize{
  \item 'neither' (no packages installed or recorded)
  \item 'same' (snapshot up-to-date with library)
  \item 'snapshot_behind' (snapshot behind library)
  \item 'library_behind' (library behind snapshot)
  \item 'conflicts' (library conflicts with snapshot)
}
}
\examples{
saproj::compare_library_snapshot()
}
\seealso{
Other helper functions for checking project libraries: \code{\link{compare_repo_snapshot}}
}
\concept{helper functions for checking project libraries}
\keyword{internal}
